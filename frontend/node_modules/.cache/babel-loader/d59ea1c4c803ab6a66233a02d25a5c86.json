{"ast":null,"code":"var _jsxFileName = \"/Users/olu/Desktop/PROJECTS/GRAPHQL/eventbooking/frontend/src/pages/Auth.js\";\nimport React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nexport class Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isLogin: true\n    };\n\n    this.swithModeHandle = () => {\n      this.setState(prevState => {\n        return {\n          isLogin: !prevState.isLogin\n        };\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: \"\\n      query{\\n        login(email: \\\"\".concat(email, \"\\\", password:\\\"\").concat(password, \"\\\"){\\n          userId\\n          token\\n          tokenExpiration\\n        }\\n      }\\n      \")\n      };\n\n      if (!this.state.isLogin) {\n        requestBody = {\n          query: \"\\n          mutation{\\n            createUser(userInput: {email: \\\"\".concat(email, \"\\\", password:\\\"\").concat(password, \"\\\"}){\\n              _id\\n              email\\n            }\\n          }\\n        \")\n        };\n      }\n\n      fetch(\"http://localhost:8000/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return res.json();\n      }).then(resData => {\n        if (resData.data.login.token) {\n          this.context.login(resData.data.login.token, resData.data.login.userId, resData.data.login.userTokenExpiration);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleChanege = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      onChange: this.handleChanege,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      onChange: this.handleChanege,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Submit\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.swithModeHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" \", \"Switch to \", this.state.isLogin ? \"Signup\" : \"Login\")));\n  }\n\n}\nAuth.contextType = AuthContext;\nexport default Auth;","map":{"version":3,"sources":["/Users/olu/Desktop/PROJECTS/GRAPHQL/eventbooking/frontend/src/pages/Auth.js"],"names":["React","Component","AuthContext","Auth","state","email","password","isLogin","swithModeHandle","setState","prevState","submitHandler","e","preventDefault","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","token","context","userId","userTokenExpiration","catch","err","console","log","handleChanege","target","id","value","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-context\";\n\nexport class Auth extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    isLogin: true\n  };\n  static contextType = AuthContext;\n\n  swithModeHandle = () => {\n    this.setState(prevState => {\n      return { isLogin: !prevState.isLogin };\n    });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n      query{\n        login(email: \"${email}\", password:\"${password}\"){\n          userId\n          token\n          tokenExpiration\n        }\n      }\n      `\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n          mutation{\n            createUser(userInput: {email: \"${email}\", password:\"${password}\"}){\n              _id\n              email\n            }\n          }\n        `\n      };\n    }\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.userTokenExpiration\n          );\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChanege = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" onChange={this.handleChanege} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" onChange={this.handleChanege} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\"> Submit</button>\n          <button type=\"button\" onClick={this.swithModeHandle}>\n            {\" \"}\n            Switch to {this.state.isLogin ? \"Signup\" : \"Login\"}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}