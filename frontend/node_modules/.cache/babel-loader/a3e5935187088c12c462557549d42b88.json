{"ast":null,"code":"var _jsxFileName = \"/Users/olu/Desktop/PROJECTS/GRAPHQL/eventbooking/frontend/src/pages/Bookings.js\";\nimport React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport Spinner from \"../components/commons/Spinner\";\nexport class Bookings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      bookings: []\n    };\n\n    this.fetchBooking = () => {\n      this.setState({\n        isLoading: true\n      });\n      const requestBody = {\n        query: \"\\n          query{\\n            bookings{\\n              _id\\n              createdAt\\n              event{\\n                _id\\n                title\\n              }\\n            }\\n          }\\n        \"\n      };\n      const token = this.context.token;\n      fetch(\"http://localhost:8000/graphql\", {\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Authorization: \"Bearer \" + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return res.json();\n      }).then(resData => {\n        const bookings = resData.data.bookings;\n        this.setState({\n          bookings\n        });\n        this.setState({\n          isLoading: false\n        });\n      }).catch(err => {\n        console.error(\"Error Fetching Event: \".concat(err.message));\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBooking();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"This is booking\"), this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \" \") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.bookings.map(booking => {\n      const date = new Date(booking.createdAt).toLocaleDateString();\n      return React.createElement(\"li\", {\n        key: booking._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, booking.event.title, \" - \", date));\n    })));\n  }\n\n}\nBookings.contextType = AuthContext;\nexport default Bookings;","map":{"version":3,"sources":["/Users/olu/Desktop/PROJECTS/GRAPHQL/eventbooking/frontend/src/pages/Bookings.js"],"names":["React","Component","AuthContext","Spinner","Bookings","state","isLoading","bookings","fetchBooking","setState","requestBody","query","token","context","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","data","catch","err","console","error","message","componentDidMount","render","map","booking","date","Date","createdAt","toLocaleDateString","_id","event","title","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,OAAO,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCI,KADsC,GAC9B;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAD8B;;AAAA,SAYtCC,YAZsC,GAYvB,MAAM;AACnB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAMI,WAAW,GAAG;AAClBC,QAAAA,KAAK;AADa,OAApB;AAeA,YAAMC,KAAK,GAAG,KAAKC,OAAL,CAAaD,KAA3B;AACAE,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,WAAf,CAF+B;AAGrCS,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYR;AAFpB;AAH4B,OAAlC,CAAL,CAQGS,IARH,CAQQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C;AAC5C,gBAAM,IAAIC,KAAJ,CAAU,QAAV,CAAN;AACD;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAbH,EAcGJ,IAdH,CAcQK,OAAO,IAAI;AAAA,cACPnB,QADO,GACMmB,OAAO,CAACC,IADd,CACPpB,QADO;AAEf,aAAKE,QAAL,CAAc;AAAEF,UAAAA;AAAF,SAAd;AACA,aAAKE,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAlBH,EAmBGsB,KAnBH,CAmBSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,KAAR,iCAAuCF,GAAG,CAACG,OAA3C;AACA,aAAKvB,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAtBH;AAuBD,KArDqC;AAAA;;AAQtC2B,EAAAA,iBAAiB,GAAG;AAClB,SAAKzB,YAAL;AACD;;AA6CD0B,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEG,KAAK7B,KAAL,CAAWC,SAAX,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,QAAX,CAAoB4B,GAApB,CAAwBC,OAAO,IAAI;AAClC,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAACG,SAAjB,EAA4BC,kBAA5B,EAAb;AACA,aACE;AAAI,QAAA,GAAG,EAAEJ,OAAO,CAACK,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,OAAO,CAACM,KAAR,CAAcC,KADjB,SAC2BN,IAD3B,CADF,CADF;AAOD,KATA,CADH,CALJ,CADF;AAqBD;;AA7EqC;AAA3BjC,Q,CAMJwC,W,GAAc1C,W;AA0EvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport Spinner from \"../components/commons/Spinner\";\n\nexport class Bookings extends Component {\n  state = {\n    isLoading: false,\n    bookings: []\n  };\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    this.fetchBooking();\n  }\n\n  fetchBooking = () => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query{\n            bookings{\n              _id\n              createdAt\n              event{\n                _id\n                title\n              }\n            }\n          }\n        `\n    };\n\n    const token = this.context.token;\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"Application/json\",\n        Authorization: \"Bearer \" + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const { bookings } = resData.data;\n        this.setState({ bookings });\n        this.setState({ isLoading: false });\n      })\n      .catch(err => {\n        console.error(`Error Fetching Event: ${err.message}`);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>This is booking</h2>\n        {this.state.isLoading ? (\n          <Spinner> </Spinner>\n        ) : (\n          <span>\n            {this.state.bookings.map(booking => {\n              const date = new Date(booking.createdAt).toLocaleDateString();\n              return (\n                <li key={booking._id}>\n                  <span>\n                    {booking.event.title} - {date}\n                  </span>\n                </li>\n              );\n            })}\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Bookings;\n"]},"metadata":{},"sourceType":"module"}